from youtube_transcript_api import YouTubeTranscriptApi

# the base class to inherit from when creating your own formatter.
from youtube_transcript_api.formatters import Formatter

# some provided subclasses, each outputs a different string format.
from youtube_transcript_api.formatters import JSONFormatter
from youtube_transcript_api.formatters import TextFormatter
from youtube_transcript_api.formatters import WebVTTFormatter
from youtube_transcript_api.formatters import SRTFormatter


def getSingleVediolCCList(video_id, languages=['en']):  # 语言默认英语，直接输入id即可。如果需要别的语言，更改languages参数即可
    return YouTubeTranscriptApi.get_transcript(video_id, languages)
    # 输出格式为
    # [
    #     {
    #         'text': 'Hey there',
    #         'start': 7.58,
    #         'duration': 6.13
    #     },
    #     {
    #         'text': 'how are you',
    #         'start': 14.08,
    #         'duration': 7.58
    #     },
    #     # ...
    # ]


def getMultiVediosCCList(video_id, languages=['en']):  # 如果想要获取多个视频的字幕列表，可以将video_id设置为["video_id1", "video_id2"]。语言默认英语，直接输入id即可。如果需要别的语言，更改languages参数即可
    return YouTubeTranscriptApi.get_transcripts(video_id, languages)


def getAvailableCCList(video_id, languages):  # 通过指定languages参数寻找特定语言的字幕，languages参数格式：['de']
    transcript_list = YouTubeTranscriptApi.list_transcripts(video_id)
    try:
        transcript = transcript_list.find_transcript(languages)
        return transcript.fetch()
    except:
        transcript = transcript_list.find_transcript(['en'])
        translated_transcript = transcript.translate(languages[0])
        return translated_transcript.fetch()


def getCCobjectInfo(video_id, languages):  # 通过指定languages参数寻找特定语言的转录本对象，languages参数格式：['de']
    transcript_list = YouTubeTranscriptApi.list_transcripts(video_id)
    transcript = transcript_list.find_generated_transcript(languages)
    print(  # 显示该转录本对象的各种信息
        transcript.video_id,
        transcript.language,
        transcript.language_code,
        # whether it has been manually created or generated by YouTube
        transcript.is_generated,
        # whether this transcript can be translated or not
        transcript.is_translatable,
        # a list of languages the transcript can be translated to
        transcript.translation_languages,
    )


def getSpecificedTypeOfFile(video_id, languages=['en']):
    # Must be a single transcript.
    transcript = YouTubeTranscriptApi.get_transcript(video_id, languages)

    formatter = JSONFormatter()

    # .format_transcript(transcript) turns the transcript into a JSON string.
    json_formatted = formatter.format_transcript(transcript)

    # Now we can write it out to a file.
    with open('your_filename.json', 'w', encoding='utf-8') as json_file:
        json_file.write(json_formatted)

    # Now should have a new JSON file that you can easily read back into Python.
